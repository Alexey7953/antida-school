"""
Условие

Вы руководитель крупной команды разработчиков, и ближайшее время планируете релиз проекта, который, несомненно,
является прорывом в индустрии. Вам стало известно что ваши конкуренты подкупили нескольких участников команды
чтобы сорвать релиз проекта. Ваша задача: проанализировать системный лог сервера и вычислить нарушителей.

Условие для входных данных:

Первая строка консольного ввода: json-список файлов в файловой системе, запись каждого файла
состоит из имени файла и перечисленных через пробел прав доступа к файлу, например: "file_796487715 X R W";
Вторая строка консольного ввода: json-список пользователей сервера, запись
каждого пользователя состоит из имени пользователя и перечисленных через пробел прав пользователя,
например: "hackerman X W";
Далее идет 0 или более строк лога сервера, каждая строка лога состоит из трех частей разделенных
пробелами: имя пользователя, команда, файл, например:
"hackerman write file_796487715".
Зафиксируем набор прав:
- R - чтение
- W - запись
- X - исполнение
Зафиксируем набор допустимых команд: "read", "write", "execute".
Формат вывода:

В первой строке вывести сообщение "Отчет о нарушениях:".
Во второй и последующих вывести список пользователей, отсортированных в алфавитном порядке: в формате:
"<имя пользователя>: <количество запросов нарушающих права доступа>".
Рекомендации к решению:

Самостоятельно изучите модуль json https://pythonworld.ru/moduli/modul-json.html
Для удобства проверки разделите всю программу на 4 логических блока такими комментариями:
# 1 Получение данных файловой системы
# 2 Получение данных о пользователях
# 3 Считывание и обрабтка системного лога
# 4 Вывод результатов на экран
Нарушением прав доступа считается выполнение команды:
- от имени пользователя, у которого нет соотв. права (например команда write требует права "W" у пользователя)
- над файлом у которого нет такого права доступа (например команда write требует права "W" у файла)
- если одновременно возникает и нехватка прав у пользователя и нехватка прав на файл - то это одно нарушение, а не два.
Требования:

Задание предназначено для закрепления навыков владения всеми ранее изученными коллекциями данных (используйте разные коллекции там где они эффективно решают задачу).
Не следует использовать функции и коллеккцию collections.OrderedDict.
Следуйте Python Zen: код должен быть минималистичным, лаконичным, но хорошо читаемым.
"""

import json

# 1 Получение данных файловой системы

incoming = json.loads(input())

files = {}
for string in incoming:
    sett = string.split()

    files[sett[0]] = {
        'read': 'R' in sett,
        'write': 'W' in sett,
        'execute': 'X' in sett,
    }

# 2 Получение данных о пользователя

incoming = json.loads(input())

users = {}
for string in incoming:
    sett = string.split()

    users[sett[0]] = {
        'read': 'R' in sett,
        'write': 'W' in sett,
        'execute': 'X' in sett,
    }

# 3 Считывание и обрабтка системного лога

flag = False
bad_operations = dict.fromkeys(users.keys(), 0)

try:
    while True:
        incoming = input()

        user, operation, file = incoming.split()

        if not users[user][operation] or not files[file][operation]:
            bad_operations[user] += 1
            flag = True

except EOFError:
    pass

# 4 Вывод результатов на экран

print('Отчет о нарушениях:')

if flag:
    user_names = list(users.keys())
    user_names.sort()

    for user in user_names:
        if bad_operations[user] != 0:
            print(f'{user} : {bad_operations[user]}')
else:
    print('Нарушений нет!')
